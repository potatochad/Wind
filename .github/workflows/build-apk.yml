name: Build APK

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    env: 
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
      KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      Variable: 1

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Prepare Keystore with logs
        run: |

          alias log='echo'
          make_folder() {
            mkdir -p "$1"
            log "Folder '$1' created or already exists"
          }
          


          mkdir -p "app"
          KEYSTORE_FILE="app/my-release-key.keystore"

          echo "üîπ Checking module folder: app"
          ls -lh "app" || echo "‚ùå Folder empty"

          if [ ! -f "$KEYSTORE_FILE" ]; then
            echo "üîπ Generating keystore at $KEYSTORE_FILE..."
            # Catch errors for better understanding
            {
              keytool -genkeypair -v \
                -keystore "$KEYSTORE_FILE" \
                -storepass "$KEYSTORE_PASSWORD" \
                -alias "$KEY_ALIAS" \
                -keypass "$KEY_PASSWORD" \
                -keyalg RSA \
                -keysize 2048 \
                -validity 10000 \
                -dname "CN=Temp, OU=Temp, O=Temp, L=Temp, S=Temp, C=US"
            } || {
              echo "‚ùå Keystore generation failed!"
              ls -lh "app"
              exit 1
            }
            echo "‚úÖ Keystore generated: $KEYSTORE_FILE"
          else
            echo "‚úÖ Keystore already exists: $KEYSTORE_FILE"
            ls -lh "app"
          fi

      - name: Grant Gradlew permission
        run: |
          set -ex
          chmod +x gradlew
          echo "üîπ Gradlew permissions set"
          ls -lh

      - name: Build Release APK with verbose logs
        run: |
          set -ex
          echo "üîπ Building signed APK..."
          
          {
            ./gradlew assembleRelease -x ktlintCheck -x ktlintKotlinScriptCheck \
              -Pandroid.injected.signing.store.file=app/my-release-key.keystore \
              -Pandroid.injected.signing.store.password="$KEYSTORE_PASSWORD" \
              -Pandroid.injected.signing.key.alias="$KEY_ALIAS" \
              -Pandroid.injected.signing.key.password="$KEY_PASSWORD"
          } || {
            echo "‚ùå Gradle build failed!"
            echo "üîπ Listing app folder contents for debugging:"
            ls -Rlh app
            exit 1
          }

          echo "‚úÖ Build completed"
          ls -lh app/build/outputs/apk/release/

      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: app/build/outputs/apk/release/app-release.apk
