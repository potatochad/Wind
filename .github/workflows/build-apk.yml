name: Build APK

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
      KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Prepare Keystore
        run: |
          set -e
          KEYSTORE_FILE=my-release-key.keystore
          echo "üîπ Generating keystore using password..."

          # Generate temporary keystore with your secrets
          keytool -genkeypair \
            -v \
            -keystore "$KEYSTORE_FILE" \
            -storepass "$KEYSTORE_PASSWORD" \
            -alias "$KEY_ALIAS" \
            -keypass "$KEY_PASSWORD" \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000 \
            -dname "CN=Temp, OU=Temp, O=Temp, L=Temp, S=Temp, C=US"

          echo "‚úÖ Keystore generated: $KEYSTORE_FILE"
          ls -lh "$KEYSTORE_FILE"
          file "$KEYSTORE_FILE"

      - name: Verify Keystore
        run: |
          set -e
          keytool -list -keystore my-release-key.keystore -storepass "$KEYSTORE_PASSWORD" -alias "$KEY_ALIAS" || echo "‚ö†Ô∏è Verification failed but continuing"

      - name: Grant Gradlew permission
        run: chmod +x gradlew

      - name: Build Release APK
        run: |
          set -e
          echo "üîπ Building signed APK..."
          ./gradlew assembleRelease -x ktlintCheck -x ktlintKotlinScriptCheck \
            -Pandroid.injected.signing.store.file=my-release-key.keystore \
            -Pandroid.injected.signing.store.password="$KEYSTORE_PASSWORD" \
            -Pandroid.injected.signing.key.alias="$KEY_ALIAS" \
            -Pandroid.injected.signing.key.password="$KEY_PASSWORD" \
            2> >(tee gradle_errors.log >&2) || { 
              echo "‚ùå Build failed! Check gradle_errors.log"; 
              exit 1; 
            }
          echo "‚úÖ Build completed"
          ls -lh app/build/outputs/apk/release/

      - name: Verify APK Signing
        run: |
          set -e
          APKSIGNER=$(find "$ANDROID_SDK_ROOT/build-tools" -name apksigner | sort -V | tail -n 1)
          "$APKSIGNER" verify --print-certs app/build/outputs/apk/release/app-release.apk
          echo "‚úÖ APK signing verified"

      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: app/build/outputs/apk/release/app-release.apk
