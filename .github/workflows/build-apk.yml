name: Build APK

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
      KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Build APK
        run: ./gradlew assembleDebug -x ktlintCheck -x ktlintKotlinScriptCheck --quiet



      - name: Keystore to file
        run: |
          KEYSTORE_FILE=my-release-key.keystore
          if [ ! -f "$KEYSTORE_FILE" ]; then
            echo "Keystore not found, creating from secret..."
          else
            echo "Keystore already exists, overwriting with secret..."
          fi
          echo "$KEYSTORE_BASE64" | base64 --decode > "$KEYSTORE_FILE"
          echo "✅ Keystore ready at $KEYSTORE_FILE"


      - name: Sign APK
        run: |
          UNSIGNED_APK=app/build/outputs/apk/debug/app-debug.apk
          SIGNED_APK=app/build/outputs/apk/debug/app-debug-signed.apk

          # Find apksigner dynamically
          APKSIGNER=$(find "$ANDROID_SDK_ROOT/build-tools" -name apksigner | sort -V | tail -n 1)
          echo "Using apksigner at: $APKSIGNER"

          echo "Signing APK..."
          "$APKSIGNER" sign \
            --ks my-release-key.keystore \
            --ks-key-alias "$KEY_ALIAS" \
            --ks-pass pass:"$KEYSTORE_PASSWORD" \
            --key-pass pass:"$KEY_PASSWORD" \
            --out "$SIGNED_APK" "$UNSIGNED_APK" 2> >(grep -v -i warning >&2) || { 
            echo "⚠️ APK signing failed"; exit 1; 
            }
          echo "✅ Signed APK created at: $SIGNED_APK"

      - name: Verify APK
        run: |
          APKSIGNER=$(find "$ANDROID_SDK_ROOT/build-tools" -name apksigner | sort -V | tail -n 1)
          "$APKSIGNER" verify --print-certs app/build/outputs/apk/debug/app-debug-signed.apk

      - name: Ship APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-signed.apk
          path: app/build/outputs/apk/debug/app-debug-signed.apk
